<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-20T12:08:57Z" name="Default suite" finished-at="2022-01-20T12:09:06Z" duration-ms="8897">
    <groups>
    </groups>
    <test started-at="2022-01-20T12:08:57Z" name="Default test" finished-at="2022-01-20T12:09:06Z" duration-ms="8897">
      <class name="ParamInfo">
        <test-method signature="getStatusCode()[pri:1, instance:ParamInfo@45a4b042]" started-at="2022-01-20T12:08:57Z" name="getStatusCode" finished-at="2022-01-20T12:09:00Z" duration-ms="3077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatusCode -->
        <test-method signature="getJsonProperties()[pri:2, instance:ParamInfo@45a4b042]" started-at="2022-01-20T12:09:00Z" name="getJsonProperties" finished-at="2022-01-20T12:09:01Z" duration-ms="1467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getJsonProperties -->
        <test-method signature="validateHeader()[pri:3, instance:ParamInfo@45a4b042]" started-at="2022-01-20T12:09:01Z" name="validateHeader" finished-at="2022-01-20T12:09:02Z" duration-ms="938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHeader -->
        <test-method signature="validatePromotionID()[pri:4, instance:ParamInfo@45a4b042]" started-at="2022-01-20T12:09:02Z" name="validatePromotionID" finished-at="2022-01-20T12:09:04Z" duration-ms="1740" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Correct promotionID name received in the Response expected [sabe movie for b2b] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Correct promotionID name received in the Response expected [sabe movie for b2b] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at ParamInfo.validatePromotionID(ParamInfo.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePromotionID -->
        <test-method signature="validateStatusCodeforInvalidKey()[pri:5, instance:ParamInfo@45a4b042]" started-at="2022-01-20T12:09:04Z" name="validateStatusCodeforInvalidKey" finished-at="2022-01-20T12:09:05Z" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCodeforInvalidKey -->
        <test-method signature="validateMessageforInvalidKey()[pri:6, instance:ParamInfo@45a4b042]" started-at="2022-01-20T12:09:05Z" name="validateMessageforInvalidKey" finished-at="2022-01-20T12:09:06Z" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMessageforInvalidKey -->
      </class> <!-- ParamInfo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
